
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://znjrbzumhvaxlzwagwvx.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpuanJienVtaHZheGx6d2Fnd3Z4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEyNTQwNzAsImV4cCI6MjA1NjgzMDA3MH0.ZEO9n5xNjEhHLSEo-O6y4PS9WK4SGjN1n2k5X4KbaWs";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    storage: typeof window !== 'undefined' ? localStorage : undefined
  }
});

// Add custom types for the Supabase client to handle the broadcast tables properly
declare module '@supabase/supabase-js' {
  interface Database {
    public: {
      Tables: {
        broadcast_groups: {
          Row: {
            id: string;
            name: string;
            created_at: string;
          };
          Insert: {
            id?: string;
            name: string;
            created_at?: string;
          };
          Update: {
            id?: string;
            name?: string;
            created_at?: string;
          };
        };
        broadcast_group_members: {
          Row: {
            id: string;
            group_id: string;
            user_id: string;
            is_admin: boolean;
            created_at: string;
          };
          Insert: {
            id?: string;
            group_id: string;
            user_id: string;
            is_admin?: boolean;
            created_at?: string;
          };
          Update: {
            id?: string;
            group_id?: string;
            user_id?: string;
            is_admin?: boolean;
            created_at?: string;
          };
        };
        broadcasts: {
          Row: {
            id: string;
            group_id: string;
            sender_id: string;
            message: string;
            created_at: string;
          };
          Insert: {
            id?: string;
            group_id: string;
            sender_id: string;
            message: string;
            created_at?: string;
          };
          Update: {
            id?: string;
            group_id?: string;
            sender_id?: string;
            message?: string;
            created_at?: string;
          };
        };
        broadcast_notifications: {
          Row: {
            id: string;
            user_id: string;
            broadcast_id: string;
            read: boolean;
            created_at: string;
          };
          Insert: {
            id?: string;
            user_id: string;
            broadcast_id: string;
            read?: boolean;
            created_at?: string;
          };
          Update: {
            id?: string;
            user_id?: string;
            broadcast_id?: string;
            read?: boolean;
            created_at?: string;
          };
        };
        auth_users_view: {
          Row: {
            id: string;
            name: string;
            email: string;
            role: string;
            department: string;
          };
        };
      };
    };
  }
}
